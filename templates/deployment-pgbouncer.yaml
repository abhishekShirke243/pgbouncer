apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "pgbouncer.labels" . | nindent 4 }}
  name: {{ include "pgbouncer.name" . }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{  include "pgbouncer.name" . }}
  template:
    metadata:
      labels:
        app: {{  include "pgbouncer.name" . }}
    spec:
      containers:
      - env:
        - name: POSTGRESQL_HOST
          valueFrom:
            configMapKeyRef:
              name: {{  include "pgbouncer.name" . }}-config
              key: POSTGRESQL_HOST
        - name: POSTGRESQL_USERNAME
          valueFrom:
            configMapKeyRef:
              name: {{  include "pgbouncer.name" . }}-config
              key: POSTGRESQL_USERNAME
        - name: POSTGRESQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{  include "pgbouncer.name" . }}-config
              key: POSTGRESQL_DATABASE
          
        #- name: PGBOUNCER_AUTH_TYPE
        #  value: md5
        - name: POSTGRESQL_PASSWORD
          value: postgres
          #valueFrom:
          #  secretKeyRef:
          #    key: POSTGRESQL_PASSWORD
          #    name: {{  include "pgbouncer.name" . }}-secrets
        - name: POOL_MODE
          valueFrom:
            configMapKeyRef:
              name: {{  include "pgbouncer.name" . }}-config
              key: POOL_MODE
        - name: SERVER_RESET_QUERY
          value: DISCARD ALL
        image: bitnami/pgbouncer:1.17.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - killall -INT pgbouncer && sleep 120
        name: pgbouncer
        ports:
        - containerPort: {{.Values.internalPort}}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all

            
                 
            



